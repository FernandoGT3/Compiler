Terminals unused in grammar

    UMINUS


State 98 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier ID SEMI
    7                | type_specifier ID LBRACKET NUM RBRACKET SEMI

    8 type_specifier: INT
    9               | VOID

   10 fun_declaration: type_specifier ID LPAREN params RPAREN compound_decl

   11 params: param_list
   12       | VOID

   13 param_list: param_list COMMA param
   14           | param

   15 param: type_specifier ID
   16      | type_specifier ID LBRACKET RBRACKET

   17 compound_decl: LBRACE local_declarations statement_list RBRACE

   18 local_declarations: local_declarations var_declaration
   19                   | ε

   20 statement_list: statement_list statement
   21               | ε

   22 statement: expression_decl
   23          | compound_decl
   24          | selection_decl
   25          | iteration_decl
   26          | return_decl

   27 expression_decl: expression SEMI
   28                | SEMI

   29 selection_decl: IF LPAREN expression RPAREN statement
   30               | IF LPAREN expression RPAREN statement ELSE statement

   31 iteration_decl: WHILE LPAREN expression RPAREN statement

   32 return_decl: RETURN SEMI
   33            | RETURN expression SEMI

   34 expression: var ATTR expression
   35           | simple_expression

   36 var: ID
   37    | ID LBRACKET expression RBRACKET

   38 simple_expression: additive_expression relop additive_expression
   39                  | additive_expression

   40 relop: LE
   41      | LT
   42      | GT
   43      | GE
   44      | EQ
   45      | NE

   46 additive_expression: additive_expression sum term
   47                    | term

   48 sum: ADD
   49    | SUB

   50 term: term mult factor
   51     | factor

   52 mult: MUL
   53     | DIV

   54 factor: LPAREN expression RPAREN
   55       | var
   56       | activation
   57       | NUM

   58 activation: ID LPAREN args RPAREN

   59 args: arg_list
   60     | ε

   61 arg_list: arg_list COMMA expression
   62         | expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <string> (258) 6 7 10 15 16 36 37 58
    NUM <num> (259) 7 57
    LE <op> (260) 40
    LT <op> (261) 41
    GT <op> (262) 42
    GE <op> (263) 43
    EQ <op> (264) 44
    NE <op> (265) 45
    ADD <op> (266) 48
    SUB <op> (267) 49
    MUL <op> (268) 52
    DIV <op> (269) 53
    ELSE (270) 30
    IF (271) 29 30
    INT (272) 8
    RETURN (273) 32 33
    VOID (274) 9 12
    WHILE (275) 31
    ATTR (276) 34
    SEMI (277) 6 7 27 28 32 33
    COMMA (278) 13 61
    LBRACE (279) 17
    RBRACE (280) 17
    LBRACKET (281) 7 16 37
    RBRACKET (282) 7 16 37
    LPAREN (283) 10 29 30 31 54 58
    RPAREN (284) 10 29 30 31 54 58
    UMINUS (285)


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    program <node> (32)
        on left: 1
        on right: 0
    declaration_list <node> (33)
        on left: 2 3
        on right: 1 2
    declaration <node> (34)
        on left: 4 5
        on right: 2 3
    var_declaration <node> (35)
        on left: 6 7
        on right: 4 18
    type_specifier <node> (36)
        on left: 8 9
        on right: 6 7 10 15 16
    fun_declaration <node> (37)
        on left: 10
        on right: 5
    params <node> (38)
        on left: 11 12
        on right: 10
    param_list <node> (39)
        on left: 13 14
        on right: 11 13
    param <node> (40)
        on left: 15 16
        on right: 13 14
    compound_decl <node> (41)
        on left: 17
        on right: 10 23
    local_declarations <node> (42)
        on left: 18 19
        on right: 17 18
    statement_list <node> (43)
        on left: 20 21
        on right: 17 20
    statement <node> (44)
        on left: 22 23 24 25 26
        on right: 20 29 30 31
    expression_decl <node> (45)
        on left: 27 28
        on right: 22
    selection_decl <node> (46)
        on left: 29 30
        on right: 24
    iteration_decl <node> (47)
        on left: 31
        on right: 25
    return_decl <node> (48)
        on left: 32 33
        on right: 26
    expression <node> (49)
        on left: 34 35
        on right: 27 29 30 31 33 34 37 54 61 62
    var <node> (50)
        on left: 36 37
        on right: 34 55
    simple_expression <node> (51)
        on left: 38 39
        on right: 35
    relop <node> (52)
        on left: 40 41 42 43 44 45
        on right: 38
    additive_expression <node> (53)
        on left: 46 47
        on right: 38 39 46
    sum <node> (54)
        on left: 48 49
        on right: 46
    term <node> (55)
        on left: 50 51
        on right: 46 47 50
    mult <node> (56)
        on left: 52 53
        on right: 50
    factor <node> (57)
        on left: 54 55 56 57
        on right: 50 51
    activation <node> (58)
        on left: 58
        on right: 56
    args <node> (59)
        on left: 59 60
        on right: 58
    arg_list <node> (60)
        on left: 61 62
        on right: 59 61


State 0

    0 $accept: • program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


State 1

    8 type_specifier: INT •

    $default  reduce using rule 8 (type_specifier)


State 2

    9 type_specifier: VOID •

    $default  reduce using rule 9 (type_specifier)


State 3

    0 $accept: program • $end

    $end  shift, and go to state 9


State 4

    1 program: declaration_list •
    2 declaration_list: declaration_list • declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


State 5

    3 declaration_list: declaration •

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration •

    $default  reduce using rule 4 (declaration)


State 7

    6 var_declaration: type_specifier • ID SEMI
    7                | type_specifier • ID LBRACKET NUM RBRACKET SEMI
   10 fun_declaration: type_specifier • ID LPAREN params RPAREN compound_decl

    ID  shift, and go to state 11


State 8

    5 declaration: fun_declaration •

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end •

    $default  accept


State 10

    2 declaration_list: declaration_list declaration •

    $default  reduce using rule 2 (declaration_list)


State 11

    6 var_declaration: type_specifier ID • SEMI
    7                | type_specifier ID • LBRACKET NUM RBRACKET SEMI
   10 fun_declaration: type_specifier ID • LPAREN params RPAREN compound_decl

    SEMI      shift, and go to state 12
    LBRACKET  shift, and go to state 13
    LPAREN    shift, and go to state 14


State 12

    6 var_declaration: type_specifier ID SEMI •

    $default  reduce using rule 6 (var_declaration)


State 13

    7 var_declaration: type_specifier ID LBRACKET • NUM RBRACKET SEMI

    NUM  shift, and go to state 15


State 14

   10 fun_declaration: type_specifier ID LPAREN • params RPAREN compound_decl

    INT   shift, and go to state 1
    VOID  shift, and go to state 16

    type_specifier  go to state 17
    params          go to state 18
    param_list      go to state 19
    param           go to state 20


State 15

    7 var_declaration: type_specifier ID LBRACKET NUM • RBRACKET SEMI

    RBRACKET  shift, and go to state 21


State 16

    9 type_specifier: VOID •
   12 params: VOID •

    RPAREN    reduce using rule 12 (params)
    $default  reduce using rule 9 (type_specifier)


State 17

   15 param: type_specifier • ID
   16      | type_specifier • ID LBRACKET RBRACKET

    ID  shift, and go to state 22


State 18

   10 fun_declaration: type_specifier ID LPAREN params • RPAREN compound_decl

    RPAREN  shift, and go to state 23


State 19

   11 params: param_list •
   13 param_list: param_list • COMMA param

    COMMA  shift, and go to state 24

    $default  reduce using rule 11 (params)


State 20

   14 param_list: param •

    $default  reduce using rule 14 (param_list)


State 21

    7 var_declaration: type_specifier ID LBRACKET NUM RBRACKET • SEMI

    SEMI  shift, and go to state 25


State 22

   15 param: type_specifier ID •
   16      | type_specifier ID • LBRACKET RBRACKET

    LBRACKET  shift, and go to state 26

    $default  reduce using rule 15 (param)


State 23

   10 fun_declaration: type_specifier ID LPAREN params RPAREN • compound_decl

    LBRACE  shift, and go to state 27

    compound_decl  go to state 28


State 24

   13 param_list: param_list COMMA • param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 17
    param           go to state 29


State 25

    7 var_declaration: type_specifier ID LBRACKET NUM RBRACKET SEMI •

    $default  reduce using rule 7 (var_declaration)


State 26

   16 param: type_specifier ID LBRACKET • RBRACKET

    RBRACKET  shift, and go to state 30


State 27

   17 compound_decl: LBRACE • local_declarations statement_list RBRACE

    $default  reduce using rule 19 (local_declarations)

    local_declarations  go to state 31


State 28

   10 fun_declaration: type_specifier ID LPAREN params RPAREN compound_decl •

    $default  reduce using rule 10 (fun_declaration)


State 29

   13 param_list: param_list COMMA param •

    $default  reduce using rule 13 (param_list)


State 30

   16 param: type_specifier ID LBRACKET RBRACKET •

    $default  reduce using rule 16 (param)


State 31

   17 compound_decl: LBRACE local_declarations • statement_list RBRACE
   18 local_declarations: local_declarations • var_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 21 (statement_list)

    var_declaration  go to state 32
    type_specifier   go to state 33
    statement_list   go to state 34


State 32

   18 local_declarations: local_declarations var_declaration •

    $default  reduce using rule 18 (local_declarations)


State 33

    6 var_declaration: type_specifier • ID SEMI
    7                | type_specifier • ID LBRACKET NUM RBRACKET SEMI

    ID  shift, and go to state 35


State 34

   17 compound_decl: LBRACE local_declarations statement_list • RBRACE
   20 statement_list: statement_list • statement

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    SEMI    shift, and go to state 41
    LBRACE  shift, and go to state 27
    RBRACE  shift, and go to state 42
    LPAREN  shift, and go to state 43

    compound_decl        go to state 44
    statement            go to state 45
    expression_decl      go to state 46
    selection_decl       go to state 47
    iteration_decl       go to state 48
    return_decl          go to state 49
    expression           go to state 50
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    activation           go to state 56


State 35

    6 var_declaration: type_specifier ID • SEMI
    7                | type_specifier ID • LBRACKET NUM RBRACKET SEMI

    SEMI      shift, and go to state 12
    LBRACKET  shift, and go to state 13


State 36

   36 var: ID •
   37    | ID • LBRACKET expression RBRACKET
   58 activation: ID • LPAREN args RPAREN

    LBRACKET  shift, and go to state 57
    LPAREN    shift, and go to state 58

    $default  reduce using rule 36 (var)


State 37

   57 factor: NUM •

    $default  reduce using rule 57 (factor)


State 38

   29 selection_decl: IF • LPAREN expression RPAREN statement
   30               | IF • LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 59


State 39

   32 return_decl: RETURN • SEMI
   33            | RETURN • expression SEMI

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    SEMI    shift, and go to state 60
    LPAREN  shift, and go to state 43

    expression           go to state 61
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    activation           go to state 56


State 40

   31 iteration_decl: WHILE • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 62


State 41

   28 expression_decl: SEMI •

    $default  reduce using rule 28 (expression_decl)


State 42

   17 compound_decl: LBRACE local_declarations statement_list RBRACE •

    $default  reduce using rule 17 (compound_decl)


State 43

   54 factor: LPAREN • expression RPAREN

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    LPAREN  shift, and go to state 43

    expression           go to state 63
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    activation           go to state 56


State 44

   23 statement: compound_decl •

    $default  reduce using rule 23 (statement)


State 45

   20 statement_list: statement_list statement •

    $default  reduce using rule 20 (statement_list)


State 46

   22 statement: expression_decl •

    $default  reduce using rule 22 (statement)


State 47

   24 statement: selection_decl •

    $default  reduce using rule 24 (statement)


State 48

   25 statement: iteration_decl •

    $default  reduce using rule 25 (statement)


State 49

   26 statement: return_decl •

    $default  reduce using rule 26 (statement)


State 50

   27 expression_decl: expression • SEMI

    SEMI  shift, and go to state 64


State 51

   34 expression: var • ATTR expression
   55 factor: var •

    ATTR  shift, and go to state 65

    $default  reduce using rule 55 (factor)


State 52

   35 expression: simple_expression •

    $default  reduce using rule 35 (expression)


State 53

   38 simple_expression: additive_expression • relop additive_expression
   39                  | additive_expression •
   46 additive_expression: additive_expression • sum term

    LE   shift, and go to state 66
    LT   shift, and go to state 67
    GT   shift, and go to state 68
    GE   shift, and go to state 69
    EQ   shift, and go to state 70
    NE   shift, and go to state 71
    ADD  shift, and go to state 72
    SUB  shift, and go to state 73

    $default  reduce using rule 39 (simple_expression)

    relop  go to state 74
    sum    go to state 75


State 54

   47 additive_expression: term •
   50 term: term • mult factor

    MUL  shift, and go to state 76
    DIV  shift, and go to state 77

    $default  reduce using rule 47 (additive_expression)

    mult  go to state 78


State 55

   51 term: factor •

    $default  reduce using rule 51 (term)


State 56

   56 factor: activation •

    $default  reduce using rule 56 (factor)


State 57

   37 var: ID LBRACKET • expression RBRACKET

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    LPAREN  shift, and go to state 43

    expression           go to state 79
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    activation           go to state 56


State 58

   58 activation: ID LPAREN • args RPAREN

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    LPAREN  shift, and go to state 43

    $default  reduce using rule 60 (args)

    expression           go to state 80
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    activation           go to state 56
    args                 go to state 81
    arg_list             go to state 82


State 59

   29 selection_decl: IF LPAREN • expression RPAREN statement
   30               | IF LPAREN • expression RPAREN statement ELSE statement

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    LPAREN  shift, and go to state 43

    expression           go to state 83
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    activation           go to state 56


State 60

   32 return_decl: RETURN SEMI •

    $default  reduce using rule 32 (return_decl)


State 61

   33 return_decl: RETURN expression • SEMI

    SEMI  shift, and go to state 84


State 62

   31 iteration_decl: WHILE LPAREN • expression RPAREN statement

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    LPAREN  shift, and go to state 43

    expression           go to state 85
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    activation           go to state 56


State 63

   54 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 86


State 64

   27 expression_decl: expression SEMI •

    $default  reduce using rule 27 (expression_decl)


State 65

   34 expression: var ATTR • expression

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    LPAREN  shift, and go to state 43

    expression           go to state 87
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    activation           go to state 56


State 66

   40 relop: LE •

    $default  reduce using rule 40 (relop)


State 67

   41 relop: LT •

    $default  reduce using rule 41 (relop)


State 68

   42 relop: GT •

    $default  reduce using rule 42 (relop)


State 69

   43 relop: GE •

    $default  reduce using rule 43 (relop)


State 70

   44 relop: EQ •

    $default  reduce using rule 44 (relop)


State 71

   45 relop: NE •

    $default  reduce using rule 45 (relop)


State 72

   48 sum: ADD •

    $default  reduce using rule 48 (sum)


State 73

   49 sum: SUB •

    $default  reduce using rule 49 (sum)


State 74

   38 simple_expression: additive_expression relop • additive_expression

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    LPAREN  shift, and go to state 43

    var                  go to state 88
    additive_expression  go to state 89
    term                 go to state 54
    factor               go to state 55
    activation           go to state 56


State 75

   46 additive_expression: additive_expression sum • term

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    LPAREN  shift, and go to state 43

    var         go to state 88
    term        go to state 90
    factor      go to state 55
    activation  go to state 56


State 76

   52 mult: MUL •

    $default  reduce using rule 52 (mult)


State 77

   53 mult: DIV •

    $default  reduce using rule 53 (mult)


State 78

   50 term: term mult • factor

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    LPAREN  shift, and go to state 43

    var         go to state 88
    factor      go to state 91
    activation  go to state 56


State 79

   37 var: ID LBRACKET expression • RBRACKET

    RBRACKET  shift, and go to state 92


State 80

   62 arg_list: expression •

    $default  reduce using rule 62 (arg_list)


State 81

   58 activation: ID LPAREN args • RPAREN

    RPAREN  shift, and go to state 93


State 82

   59 args: arg_list •
   61 arg_list: arg_list • COMMA expression

    COMMA  shift, and go to state 94

    $default  reduce using rule 59 (args)


State 83

   29 selection_decl: IF LPAREN expression • RPAREN statement
   30               | IF LPAREN expression • RPAREN statement ELSE statement

    RPAREN  shift, and go to state 95


State 84

   33 return_decl: RETURN expression SEMI •

    $default  reduce using rule 33 (return_decl)


State 85

   31 iteration_decl: WHILE LPAREN expression • RPAREN statement

    RPAREN  shift, and go to state 96


State 86

   54 factor: LPAREN expression RPAREN •

    $default  reduce using rule 54 (factor)


State 87

   34 expression: var ATTR expression •

    $default  reduce using rule 34 (expression)


State 88

   55 factor: var •

    $default  reduce using rule 55 (factor)


State 89

   38 simple_expression: additive_expression relop additive_expression •
   46 additive_expression: additive_expression • sum term

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73

    $default  reduce using rule 38 (simple_expression)

    sum  go to state 75


State 90

   46 additive_expression: additive_expression sum term •
   50 term: term • mult factor

    MUL  shift, and go to state 76
    DIV  shift, and go to state 77

    $default  reduce using rule 46 (additive_expression)

    mult  go to state 78


State 91

   50 term: term mult factor •

    $default  reduce using rule 50 (term)


State 92

   37 var: ID LBRACKET expression RBRACKET •

    $default  reduce using rule 37 (var)


State 93

   58 activation: ID LPAREN args RPAREN •

    $default  reduce using rule 58 (activation)


State 94

   61 arg_list: arg_list COMMA • expression

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    LPAREN  shift, and go to state 43

    expression           go to state 97
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    activation           go to state 56


State 95

   29 selection_decl: IF LPAREN expression RPAREN • statement
   30               | IF LPAREN expression RPAREN • statement ELSE statement

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    SEMI    shift, and go to state 41
    LBRACE  shift, and go to state 27
    LPAREN  shift, and go to state 43

    compound_decl        go to state 44
    statement            go to state 98
    expression_decl      go to state 46
    selection_decl       go to state 47
    iteration_decl       go to state 48
    return_decl          go to state 49
    expression           go to state 50
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    activation           go to state 56


State 96

   31 iteration_decl: WHILE LPAREN expression RPAREN • statement

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    SEMI    shift, and go to state 41
    LBRACE  shift, and go to state 27
    LPAREN  shift, and go to state 43

    compound_decl        go to state 44
    statement            go to state 99
    expression_decl      go to state 46
    selection_decl       go to state 47
    iteration_decl       go to state 48
    return_decl          go to state 49
    expression           go to state 50
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    activation           go to state 56


State 97

   61 arg_list: arg_list COMMA expression •

    $default  reduce using rule 61 (arg_list)


State 98

   29 selection_decl: IF LPAREN expression RPAREN statement •
   30               | IF LPAREN expression RPAREN statement • ELSE statement

    ELSE  shift, and go to state 100

    ELSE      [reduce using rule 29 (selection_decl)]
    $default  reduce using rule 29 (selection_decl)


State 99

   31 iteration_decl: WHILE LPAREN expression RPAREN statement •

    $default  reduce using rule 31 (iteration_decl)


State 100

   30 selection_decl: IF LPAREN expression RPAREN statement ELSE • statement

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    SEMI    shift, and go to state 41
    LBRACE  shift, and go to state 27
    LPAREN  shift, and go to state 43

    compound_decl        go to state 44
    statement            go to state 101
    expression_decl      go to state 46
    selection_decl       go to state 47
    iteration_decl       go to state 48
    return_decl          go to state 49
    expression           go to state 50
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    activation           go to state 56


State 101

   30 selection_decl: IF LPAREN expression RPAREN statement ELSE statement •

    $default  reduce using rule 30 (selection_decl)
